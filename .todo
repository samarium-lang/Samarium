(task)
üìù Documentation:
- [ ] 1. Introduction
- [ ] 2. Strings
- [x] 3. Numbers
- [x] 4. Creating Variables
- [x] 5. Operators
- [ ] 6. Arrays
- [ ] 7. Built-in Functions
    - [ ] 1. STDIN
    - [ ] 2. STDOUT
    - [ ] 3. STDERR
- [ ] 8. Control Flow
    - [ ] 1. if/else
    - [ ] 2. for loop
    - [ ] 3. while loop
    - [ ] 4. break/continue
    - [ ] 5. try/catch
- [ ] 9. Functions
- [ ] 10. Lambda functions
- [ ] 11. Importing
- [ ] 12. Classes
- [ ] 13. Standard Library
    - [ ] 1. `collections` module
    - [ ] 2. `iter` module
    - [ ] 3. `math` module
    - [ ] 4. `random` module
    - [ ] 5. `string` module
    - [ ] 6. `types` module
----

(task)
üöÄ Core:
- [ ] 1. Features
- [x] 2. Types
- [x] 3. Imports
- [ ] 4. Extension
----

(task)
‚ú® Features:
- [x] 1. Default parameter values - cancelled
- [x] 2. Generators - cancelled
- [x] 3. Python code evaluation - cancelled
- [x] 4. Update assignment
- [x] 5. Overhaul the tokenizer
- [x] 6. String interpolation - cancelled
- [x] 7. Table implementation
- [x] 8. Distinguishing between `self.` and `self` for Token.INSTANCE
- [x] 9. Array & Table comprehensions
- [x] 10. Decorator test - cancelled
- [x] 11. Single-line comment transpiling
- [x] 12. Test stdlib
- [x] 13. Test casting
- [x] 14. Fix code execution in comments
- [x] 15. Exclude indentation from `throw`
- [x] 16. SMNull wrapper for functions
- [x] 17. Remove the need for commas in lambda parameters
- [ ] 18. SMNull wrapper for lambdas
- [ ] 19. Ban genexprs
- [x] 20. Empty class bodies
- [x] 21. Include all non-Samarium types in `assert_smtype`
- [x] 22. Replace slicing syntax
- [x] 23. Fix `}` tokenizing at the end of the file
- [x] 24. Empty function bodies
- [x] 25. Variables as default for `groupnames`
- [x] 26. Slicing
- [x] 27. Switch token behavior around Token.IF, Token.ATTRIBUTE, Token.STDIN
- [x] 28. Token concepts
----

(task)
üî£ Types:
- [x] 1. Class methods
- [x] 2. Null
- [x] 3. String formatting
- [x] 4. Array
    - [x] 1. Array.toBoolean
    - [x] 2. Array.has
    - [x] 3. Array.iterate
    - [x] 4. Array.special
    - [x] 5. Fix Array.toString
- [x] 5. String.special
- [x] 6. Integer.special
- [x] 7. Table
    - [x] 1. Table.iterate
    - [x] 2. Table.has
    - [x] 3. Table.special
    - [x] 4. Table.toString
    - [x] 5. Table.toBoolean
----

(task)
üöö Imports:
- [x] 1. Require imports to be but in the first lines of the file
- [x] 2. Split import part from the rest of the code
- [x] 3. Execute import part, add result to the global namespace
----

(task)
üé® Extension:
- [x] 1. Class with no parents
- [x] 2. Fix function calls highlighting the left parenthesis
- [x] 3. Fix escape sequences
- [ ] 4. Fix highlighting for class with parents on separate lines
- [ ] 5. Fix highlighting for functions with params on separate lines
- [ ] 6. Fix function definition highlighting when default arguments are used
- [ ] 7. Fix first parameter of a lambda function being highlighted like a function name
----

(task)
üìö Standard Library:
- [ ] 1. collections
- [ ] 2. iter
- [x] 3. math
- [x] 4. random
- [x] 5. string
- [ ] 6. types
----

(task)
üé≤ Random:
- [x] 1. choice
- [x] 2. choices
- [x] 3. sample
- [x] 4. shuffle
----

(task)
üî¢ Math:
- [x] 1. abs
- [x] 2. factorial
- [x] 3. gcd
- [x] 4. lcm
- [x] 5. product
- [x] 6. sum
- [x] 7. sqrt
- [x] 8. max
- [x] 9. min
- [x] 10. fromDecimal
- [x] 11. shl
- [x] 12. shr
----

(task)
üîÅ Iter:
- [x] 1. find
- [x] 2. count
- [ ] 3. accumulate
- [x] 4. dropWhile
- [x] 5. enumerate
- [x] 6. filter
- [x] 7. filterFalse
- [x] 8. map
- [x] 9. range
- [x] 10. reverse
- [x] 11. takeWhile
----

(task)
üß∂ String:
- [x] 1. uppercase
- [x] 2. lowercase
- [x] 3. letters
- [x] 4. digits
- [x] 5. octdigits
- [x] 6. hexdigits
- [x] 7. punctuation
- [x] 8. whitespace
- [x] 9. printable
- [x] 10. center
- [x] 11. endsWith
- [x] 12. startsWith
- [x] 13. isWrapped
- [x] 14. strip
- [x] 15. join
- [x] 16. stripLeft
- [x] 17. stripRight
- [x] 18. split
- [x] 19. isUpper
- [x] 20. isLower
- [x] 21. isTitle
- [x] 22. isCapitalized
- [x] 23. toUpper
- [x] 24. toLower
- [x] 25. swapcase
- [x] 26. title
- [x] 27. capitalize
- [x] 28. isAlphabetic
- [x] 29. isAlphanumeric
- [x] 30. isDecimal
- [x] 31. isOctal
- [x] 32. isHexadecimal
- [x] 33. replace
- [x] 34. leftpad
- [x] 35. rightpad
----

(task)
üì¶ Collections:
- [ ] 1. Queue
- [ ] 2. Deque
- [ ] 3. Set
- [x] 4. Stack
- [ ] 5. Tuple
- [ ] 6. StaticArray
----

(task)
üî£ Types:
- [ ] 1. Boolean
----
